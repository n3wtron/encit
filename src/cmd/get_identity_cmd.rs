use crate::{EncItConfig, EncItError};
use clap::{App, Arg, ArgMatches, SubCommand};
use std::cell::RefCell;
use std::io::{stdout, Write};
use std::rc::Rc;

pub fn get_identity_cmd<'a>() -> App<'a, 'a> {
    SubCommand::with_name("identity")
        .arg(Arg::with_name("name").takes_value(true).required(true))
        .arg(
            Arg::with_name("format")
                .long("format")
                .short("f")
                .takes_value(true)
                .required(true)
                .default_value("hex-pem")
                .possible_values(&["pem", "hex-pem", "base64-pem"]),
        )
        .arg(
            Arg::with_name("private-key")
                .long("private-key")
                .help("display private key"),
        )
}

pub fn get_identity_exec(
    arg_matches: &ArgMatches,
    config: Rc<dyn EncItConfig>,
) -> Result<(), EncItError> {
    get_identity(arg_matches, config, Rc::new(RefCell::new(stdout())))
}

fn get_identity(
    arg_matches: &ArgMatches,
    config: Rc<dyn EncItConfig>,
    writer: Rc<RefCell<dyn Write>>,
) -> Result<(), EncItError> {
    let identity_name = arg_matches.value_of("name").unwrap();
    let identity = config.identity(identity_name);
    if identity.is_none() {
        return Err(EncItError::IdentityNotFound(identity_name.to_string()));
    }
    let identity = identity.unwrap();
    if arg_matches.is_present("private-key") {
        let private_key = match arg_matches.value_of("format").unwrap() {
            "pem" => identity
                .private_key()
                .pem()
                .map(|priv_key_vec| String::from_utf8(priv_key_vec).unwrap())?,
            "base64-pem" => identity.private_key().pem().map(base64::encode)?,
            _ => identity.private_key().hex()?,
        };
        writer.borrow_mut().write_all(private_key.as_bytes())?;
    } else {
        let public_key = match arg_matches.value_of("format").unwrap() {
            "pem" => identity
                .private_key()
                .public_key_pem()
                .map(|pub_key_vec| String::from_utf8(pub_key_vec).unwrap())?,
            "base64-pem" => identity
                .private_key()
                .public_key_pem()
                .map(base64::encode)?,
            _ => identity.private_key().public_key_pem_hex()?,
        };
        writer.borrow_mut().write_all(public_key.as_bytes())?;
    }
    Ok(())
}

#[cfg(test)]
mod tests {
    use super::*;
    use crate::config::{EncItIdentity, EncItPrivateKey, MockEncItConfig};
    use crate::{EncItConfig, EncItError, EncItPEM};
    use mockall::predicate::eq;
    use std::cell::RefCell;
    use std::rc::Rc;

    #[test]
    fn get_identity_public_key_hex() -> Result<(), EncItError> {
        let expected_pem = EncItPEM::Hex("2d2d2d2d2d424547494e20454e435259505445442050524956415445204b45592d2d2d2d2d0a4d4949464844424f42676b71686b694739773042425130775154417042676b71686b69473977304242517777484151493838324d6757597a59774d43416767410a4d41774743437147534962334451494a42514177464159494b6f5a496876634e41776345434e48324e35597a305a5a6742494945794b385552474554676d57570a7a465453695679474e6566496563315876354237374b59576c505a75765753474f66786451696377394378696653496d44637a53384e6a484b537355343044690a334e3141427155685652772b435a425562317141707958336d3731596446776f6c3874535951756658626f6c4f453176394b384b4d2f506e387644556e6867610a4e7365722f6466656e48643846724734643566626c4564645247496a67615777446a55566e41307632547531764868382b4c6370666a5858356b62664163524f0a2b7268492f47575a737130306e41336e6d445270354e537761454e613036594234543538565a686a50577a6c6634776f546a69733630727a616b4b716e4d51640a4f5535367a304834764b6c2b7a6d522f704c5473476731434241724864334a4857596e304959383952302b677665465259317559362f753234364962714a4a630a743557694c72444532792b6d4b2b58733659443966474f7842654a414f5268337a525a694457616d39392f536545646271754f5a735857563947344c68616a6d0a49627461717753694677547a2f6751534f464c574b553766513370675a7a594275772b63464b3045485777386f5677686f33765a3378515630583259512b6d360a677075575472463377464f795743564438534468786d6b304e2f51764547324e7a6257534a69594c624451554d7858783767636e304a50794138766c73465a410a4d797061373263714a3775695378776b4e4873527068743150796a667a51644a784f55307355534c2f5864524135346a2b38593962515a35704a4b566767454f0a705150346748307048326e65316a49725952754466333149566930726f4c554d4a4a6f686b6c48684a5a5a5035736664375448536e516f3174304e4f6f2b62300a4b6d594173594e6f4e39724d5738724666725556484c32483366635873344a6e366c596f63476a7268436f462b7166496a6a48637a68484f7451497675756c360a3964726661774c5434624a543234454c726d615655686f716531573032686c6c42506441767748696f6b446247533864766e6567615548726f6f4d6f373962610a434b7271704868684669654d646a445174777835656a4265324b56692b6165644f533469507131626e67386162337264724f4d4c3939373864476d7a4b366c340a4b525a596a702f4c3051707169436f584f794e44776a61377746384253477466553338625664303235576a704943547541617753714a4a666c53365238436d640a4e686d6b376d4d742b456e6436696b51563246436133536a6630587969742f6e33386a55344c7a4545684a6f34446a656d30486b717875647455416e436c66770a38392f4235525a7353646f2f764748642b69304337674f42624743617370334c34766b6b727378683863676452795754427837634d65477057573371704f314b0a424647476b4143306879676973764e6b6444383953796b36626f364173304365647a446245526a525858664e4d6d514e61386a4d4e334d556c3632356b7867340a667149524931366b5176453147464e7230305241456e537474543063316e313757482b64614453393647667031327330656e31394b303371467348446b6d55680a4b4277535a6a6973706a74706f67595973495538616b684d41683273723942356e5579754b3842684441337874795245684f2f4b3471376153624a775268756e0a794838796145414776395a564a54584f66544a6d702b32527a79734d5968772b3632516d3833697a4d6f2b35742f7677585a4375764f4b5042495543576c52780a5a7571767178384169364f2b7167574a36556c50616c446f41772b737272574743686935356e45314753695754377433447665504c5845567435692f794b37380a6f4e78796e6236765a764f30546e766b35684966437232344c3975544542554f756661344f4e76425a4c51345678393771446b4f706f393230716336764271720a4c4b734b5136416b4f4e6a334633526230586c4d484e616f7836732f4c505a356a72643669362f4b54596f50395041684b45575966734c4978702f6b725856560a77722b69734d764f4e39654b4d437335516552793061766949617041356a43444e48315a757730566d753249484f59723378574774336c3135583278626d4b780a32463855722b765978516c73436d632b7851422b6965344c7441674c706c4947516b495069595073564b56754b7678706455466b7a776d6f4c4c714e7463576b0a4b796138706942464764687359514f654b6e336774673d3d0a2d2d2d2d2d454e4420454e435259505445442050524956415445204b45592d2d2d2d2d0a".to_string());
        let expected_output = hex::encode(
            expected_pem
                .private_key(Some("test"))?
                .public_key_to_pem()?,
        );
        get_identity_test("hex-pem", false, expected_output)
    }

    #[test]
    fn get_identity_private_key_hex() -> Result<(), EncItError> {
        let expected_pem = EncItPEM::Hex("2d2d2d2d2d424547494e20454e435259505445442050524956415445204b45592d2d2d2d2d0a4d4949464844424f42676b71686b694739773042425130775154417042676b71686b69473977304242517777484151493838324d6757597a59774d43416767410a4d41774743437147534962334451494a42514177464159494b6f5a496876634e41776345434e48324e35597a305a5a6742494945794b385552474554676d57570a7a465453695679474e6566496563315876354237374b59576c505a75765753474f66786451696377394378696653496d44637a53384e6a484b537355343044690a334e3141427155685652772b435a425562317141707958336d3731596446776f6c3874535951756658626f6c4f453176394b384b4d2f506e387644556e6867610a4e7365722f6466656e48643846724734643566626c4564645247496a67615777446a55566e41307632547531764868382b4c6370666a5858356b62664163524f0a2b7268492f47575a737130306e41336e6d445270354e537761454e613036594234543538565a686a50577a6c6634776f546a69733630727a616b4b716e4d51640a4f5535367a304834764b6c2b7a6d522f704c5473476731434241724864334a4857596e304959383952302b677665465259317559362f753234364962714a4a630a743557694c72444532792b6d4b2b58733659443966474f7842654a414f5268337a525a694457616d39392f536545646271754f5a735857563947344c68616a6d0a49627461717753694677547a2f6751534f464c574b553766513370675a7a594275772b63464b3045485777386f5677686f33765a3378515630583259512b6d360a677075575472463377464f795743564438534468786d6b304e2f51764547324e7a6257534a69594c624451554d7858783767636e304a50794138766c73465a410a4d797061373263714a3775695378776b4e4873527068743150796a667a51644a784f55307355534c2f5864524135346a2b38593962515a35704a4b566767454f0a705150346748307048326e65316a49725952754466333149566930726f4c554d4a4a6f686b6c48684a5a5a5035736664375448536e516f3174304e4f6f2b62300a4b6d594173594e6f4e39724d5738724666725556484c32483366635873344a6e366c596f63476a7268436f462b7166496a6a48637a68484f7451497675756c360a3964726661774c5434624a543234454c726d615655686f716531573032686c6c42506441767748696f6b446247533864766e6567615548726f6f4d6f373962610a434b7271704868684669654d646a445174777835656a4265324b56692b6165644f533469507131626e67386162337264724f4d4c3939373864476d7a4b366c340a4b525a596a702f4c3051707169436f584f794e44776a61377746384253477466553338625664303235576a704943547541617753714a4a666c53365238436d640a4e686d6b376d4d742b456e6436696b51563246436133536a6630587969742f6e33386a55344c7a4545684a6f34446a656d30486b717875647455416e436c66770a38392f4235525a7353646f2f764748642b69304337674f42624743617370334c34766b6b727378683863676452795754427837634d65477057573371704f314b0a424647476b4143306879676973764e6b6444383953796b36626f364173304365647a446245526a525858664e4d6d514e61386a4d4e334d556c3632356b7867340a667149524931366b5176453147464e7230305241456e537474543063316e313757482b64614453393647667031327330656e31394b303371467348446b6d55680a4b4277535a6a6973706a74706f67595973495538616b684d41683273723942356e5579754b3842684441337874795245684f2f4b3471376153624a775268756e0a794838796145414776395a564a54584f66544a6d702b32527a79734d5968772b3632516d3833697a4d6f2b35742f7677585a4375764f4b5042495543576c52780a5a7571767178384169364f2b7167574a36556c50616c446f41772b737272574743686935356e45314753695754377433447665504c5845567435692f794b37380a6f4e78796e6236765a764f30546e766b35684966437232344c3975544542554f756661344f4e76425a4c51345678393771446b4f706f393230716336764271720a4c4b734b5136416b4f4e6a334633526230586c4d484e616f7836732f4c505a356a72643669362f4b54596f50395041684b45575966734c4978702f6b725856560a77722b69734d764f4e39654b4d437335516552793061766949617041356a43444e48315a757730566d753249484f59723378574774336c3135583278626d4b780a32463855722b765978516c73436d632b7851422b6965344c7441674c706c4947516b495069595073564b56754b7678706455466b7a776d6f4c4c714e7463576b0a4b796138706942464764687359514f654b6e336774673d3d0a2d2d2d2d2d454e4420454e435259505445442050524956415445204b45592d2d2d2d2d0a".to_string());
        let expected_output = hex::encode(
            expected_pem
                .private_key(Some("test"))?
                .private_key_to_pem()?,
        );
        get_identity_test("hex-pem", true, expected_output)
    }

    #[test]
    fn get_identity_public_key_base64() -> Result<(), EncItError> {
        let expected_pem = EncItPEM::Hex("2d2d2d2d2d424547494e20454e435259505445442050524956415445204b45592d2d2d2d2d0a4d4949464844424f42676b71686b694739773042425130775154417042676b71686b69473977304242517777484151493838324d6757597a59774d43416767410a4d41774743437147534962334451494a42514177464159494b6f5a496876634e41776345434e48324e35597a305a5a6742494945794b385552474554676d57570a7a465453695679474e6566496563315876354237374b59576c505a75765753474f66786451696377394378696653496d44637a53384e6a484b537355343044690a334e3141427155685652772b435a425562317141707958336d3731596446776f6c3874535951756658626f6c4f453176394b384b4d2f506e387644556e6867610a4e7365722f6466656e48643846724734643566626c4564645247496a67615777446a55566e41307632547531764868382b4c6370666a5858356b62664163524f0a2b7268492f47575a737130306e41336e6d445270354e537761454e613036594234543538565a686a50577a6c6634776f546a69733630727a616b4b716e4d51640a4f5535367a304834764b6c2b7a6d522f704c5473476731434241724864334a4857596e304959383952302b677665465259317559362f753234364962714a4a630a743557694c72444532792b6d4b2b58733659443966474f7842654a414f5268337a525a694457616d39392f536545646271754f5a735857563947344c68616a6d0a49627461717753694677547a2f6751534f464c574b553766513370675a7a594275772b63464b3045485777386f5677686f33765a3378515630583259512b6d360a677075575472463377464f795743564438534468786d6b304e2f51764547324e7a6257534a69594c624451554d7858783767636e304a50794138766c73465a410a4d797061373263714a3775695378776b4e4873527068743150796a667a51644a784f55307355534c2f5864524135346a2b38593962515a35704a4b566767454f0a705150346748307048326e65316a49725952754466333149566930726f4c554d4a4a6f686b6c48684a5a5a5035736664375448536e516f3174304e4f6f2b62300a4b6d594173594e6f4e39724d5738724666725556484c32483366635873344a6e366c596f63476a7268436f462b7166496a6a48637a68484f7451497675756c360a3964726661774c5434624a543234454c726d615655686f716531573032686c6c42506441767748696f6b446247533864766e6567615548726f6f4d6f373962610a434b7271704868684669654d646a445174777835656a4265324b56692b6165644f533469507131626e67386162337264724f4d4c3939373864476d7a4b366c340a4b525a596a702f4c3051707169436f584f794e44776a61377746384253477466553338625664303235576a704943547541617753714a4a666c53365238436d640a4e686d6b376d4d742b456e6436696b51563246436133536a6630587969742f6e33386a55344c7a4545684a6f34446a656d30486b717875647455416e436c66770a38392f4235525a7353646f2f764748642b69304337674f42624743617370334c34766b6b727378683863676452795754427837634d65477057573371704f314b0a424647476b4143306879676973764e6b6444383953796b36626f364173304365647a446245526a525858664e4d6d514e61386a4d4e334d556c3632356b7867340a667149524931366b5176453147464e7230305241456e537474543063316e313757482b64614453393647667031327330656e31394b303371467348446b6d55680a4b4277535a6a6973706a74706f67595973495538616b684d41683273723942356e5579754b3842684441337874795245684f2f4b3471376153624a775268756e0a794838796145414776395a564a54584f66544a6d702b32527a79734d5968772b3632516d3833697a4d6f2b35742f7677585a4375764f4b5042495543576c52780a5a7571767178384169364f2b7167574a36556c50616c446f41772b737272574743686935356e45314753695754377433447665504c5845567435692f794b37380a6f4e78796e6236765a764f30546e766b35684966437232344c3975544542554f756661344f4e76425a4c51345678393771446b4f706f393230716336764271720a4c4b734b5136416b4f4e6a334633526230586c4d484e616f7836732f4c505a356a72643669362f4b54596f50395041684b45575966734c4978702f6b725856560a77722b69734d764f4e39654b4d437335516552793061766949617041356a43444e48315a757730566d753249484f59723378574774336c3135583278626d4b780a32463855722b765978516c73436d632b7851422b6965344c7441674c706c4947516b495069595073564b56754b7678706455466b7a776d6f4c4c714e7463576b0a4b796138706942464764687359514f654b6e336774673d3d0a2d2d2d2d2d454e4420454e435259505445442050524956415445204b45592d2d2d2d2d0a".to_string());
        let expected_output = base64::encode(
            expected_pem
                .private_key(Some("test"))?
                .public_key_to_pem()?,
        );
        get_identity_test("base64-pem", false, expected_output)
    }

    #[test]
    fn get_identity_private_key_base64() -> Result<(), EncItError> {
        let expected_pem = EncItPEM::Hex("2d2d2d2d2d424547494e20454e435259505445442050524956415445204b45592d2d2d2d2d0a4d4949464844424f42676b71686b694739773042425130775154417042676b71686b69473977304242517777484151493838324d6757597a59774d43416767410a4d41774743437147534962334451494a42514177464159494b6f5a496876634e41776345434e48324e35597a305a5a6742494945794b385552474554676d57570a7a465453695679474e6566496563315876354237374b59576c505a75765753474f66786451696377394378696653496d44637a53384e6a484b537355343044690a334e3141427155685652772b435a425562317141707958336d3731596446776f6c3874535951756658626f6c4f453176394b384b4d2f506e387644556e6867610a4e7365722f6466656e48643846724734643566626c4564645247496a67615777446a55566e41307632547531764868382b4c6370666a5858356b62664163524f0a2b7268492f47575a737130306e41336e6d445270354e537761454e613036594234543538565a686a50577a6c6634776f546a69733630727a616b4b716e4d51640a4f5535367a304834764b6c2b7a6d522f704c5473476731434241724864334a4857596e304959383952302b677665465259317559362f753234364962714a4a630a743557694c72444532792b6d4b2b58733659443966474f7842654a414f5268337a525a694457616d39392f536545646271754f5a735857563947344c68616a6d0a49627461717753694677547a2f6751534f464c574b553766513370675a7a594275772b63464b3045485777386f5677686f33765a3378515630583259512b6d360a677075575472463377464f795743564438534468786d6b304e2f51764547324e7a6257534a69594c624451554d7858783767636e304a50794138766c73465a410a4d797061373263714a3775695378776b4e4873527068743150796a667a51644a784f55307355534c2f5864524135346a2b38593962515a35704a4b566767454f0a705150346748307048326e65316a49725952754466333149566930726f4c554d4a4a6f686b6c48684a5a5a5035736664375448536e516f3174304e4f6f2b62300a4b6d594173594e6f4e39724d5738724666725556484c32483366635873344a6e366c596f63476a7268436f462b7166496a6a48637a68484f7451497675756c360a3964726661774c5434624a543234454c726d615655686f716531573032686c6c42506441767748696f6b446247533864766e6567615548726f6f4d6f373962610a434b7271704868684669654d646a445174777835656a4265324b56692b6165644f533469507131626e67386162337264724f4d4c3939373864476d7a4b366c340a4b525a596a702f4c3051707169436f584f794e44776a61377746384253477466553338625664303235576a704943547541617753714a4a666c53365238436d640a4e686d6b376d4d742b456e6436696b51563246436133536a6630587969742f6e33386a55344c7a4545684a6f34446a656d30486b717875647455416e436c66770a38392f4235525a7353646f2f764748642b69304337674f42624743617370334c34766b6b727378683863676452795754427837634d65477057573371704f314b0a424647476b4143306879676973764e6b6444383953796b36626f364173304365647a446245526a525858664e4d6d514e61386a4d4e334d556c3632356b7867340a667149524931366b5176453147464e7230305241456e537474543063316e313757482b64614453393647667031327330656e31394b303371467348446b6d55680a4b4277535a6a6973706a74706f67595973495538616b684d41683273723942356e5579754b3842684441337874795245684f2f4b3471376153624a775268756e0a794838796145414776395a564a54584f66544a6d702b32527a79734d5968772b3632516d3833697a4d6f2b35742f7677585a4375764f4b5042495543576c52780a5a7571767178384169364f2b7167574a36556c50616c446f41772b737272574743686935356e45314753695754377433447665504c5845567435692f794b37380a6f4e78796e6236765a764f30546e766b35684966437232344c3975544542554f756661344f4e76425a4c51345678393771446b4f706f393230716336764271720a4c4b734b5136416b4f4e6a334633526230586c4d484e616f7836732f4c505a356a72643669362f4b54596f50395041684b45575966734c4978702f6b725856560a77722b69734d764f4e39654b4d437335516552793061766949617041356a43444e48315a757730566d753249484f59723378574774336c3135583278626d4b780a32463855722b765978516c73436d632b7851422b6965344c7441674c706c4947516b495069595073564b56754b7678706455466b7a776d6f4c4c714e7463576b0a4b796138706942464764687359514f654b6e336774673d3d0a2d2d2d2d2d454e4420454e435259505445442050524956415445204b45592d2d2d2d2d0a".to_string());
        let expected_output = base64::encode(
            expected_pem
                .private_key(Some("test"))?
                .private_key_to_pem()?,
        );
        get_identity_test("base64-pem", true, expected_output)
    }

    #[test]
    fn get_identity_public_key_pem() -> Result<(), EncItError> {
        let expected_pem = EncItPEM::Hex("2d2d2d2d2d424547494e20454e435259505445442050524956415445204b45592d2d2d2d2d0a4d4949464844424f42676b71686b694739773042425130775154417042676b71686b69473977304242517777484151493838324d6757597a59774d43416767410a4d41774743437147534962334451494a42514177464159494b6f5a496876634e41776345434e48324e35597a305a5a6742494945794b385552474554676d57570a7a465453695679474e6566496563315876354237374b59576c505a75765753474f66786451696377394378696653496d44637a53384e6a484b537355343044690a334e3141427155685652772b435a425562317141707958336d3731596446776f6c3874535951756658626f6c4f453176394b384b4d2f506e387644556e6867610a4e7365722f6466656e48643846724734643566626c4564645247496a67615777446a55566e41307632547531764868382b4c6370666a5858356b62664163524f0a2b7268492f47575a737130306e41336e6d445270354e537761454e613036594234543538565a686a50577a6c6634776f546a69733630727a616b4b716e4d51640a4f5535367a304834764b6c2b7a6d522f704c5473476731434241724864334a4857596e304959383952302b677665465259317559362f753234364962714a4a630a743557694c72444532792b6d4b2b58733659443966474f7842654a414f5268337a525a694457616d39392f536545646271754f5a735857563947344c68616a6d0a49627461717753694677547a2f6751534f464c574b553766513370675a7a594275772b63464b3045485777386f5677686f33765a3378515630583259512b6d360a677075575472463377464f795743564438534468786d6b304e2f51764547324e7a6257534a69594c624451554d7858783767636e304a50794138766c73465a410a4d797061373263714a3775695378776b4e4873527068743150796a667a51644a784f55307355534c2f5864524135346a2b38593962515a35704a4b566767454f0a705150346748307048326e65316a49725952754466333149566930726f4c554d4a4a6f686b6c48684a5a5a5035736664375448536e516f3174304e4f6f2b62300a4b6d594173594e6f4e39724d5738724666725556484c32483366635873344a6e366c596f63476a7268436f462b7166496a6a48637a68484f7451497675756c360a3964726661774c5434624a543234454c726d615655686f716531573032686c6c42506441767748696f6b446247533864766e6567615548726f6f4d6f373962610a434b7271704868684669654d646a445174777835656a4265324b56692b6165644f533469507131626e67386162337264724f4d4c3939373864476d7a4b366c340a4b525a596a702f4c3051707169436f584f794e44776a61377746384253477466553338625664303235576a704943547541617753714a4a666c53365238436d640a4e686d6b376d4d742b456e6436696b51563246436133536a6630587969742f6e33386a55344c7a4545684a6f34446a656d30486b717875647455416e436c66770a38392f4235525a7353646f2f764748642b69304337674f42624743617370334c34766b6b727378683863676452795754427837634d65477057573371704f314b0a424647476b4143306879676973764e6b6444383953796b36626f364173304365647a446245526a525858664e4d6d514e61386a4d4e334d556c3632356b7867340a667149524931366b5176453147464e7230305241456e537474543063316e313757482b64614453393647667031327330656e31394b303371467348446b6d55680a4b4277535a6a6973706a74706f67595973495538616b684d41683273723942356e5579754b3842684441337874795245684f2f4b3471376153624a775268756e0a794838796145414776395a564a54584f66544a6d702b32527a79734d5968772b3632516d3833697a4d6f2b35742f7677585a4375764f4b5042495543576c52780a5a7571767178384169364f2b7167574a36556c50616c446f41772b737272574743686935356e45314753695754377433447665504c5845567435692f794b37380a6f4e78796e6236765a764f30546e766b35684966437232344c3975544542554f756661344f4e76425a4c51345678393771446b4f706f393230716336764271720a4c4b734b5136416b4f4e6a334633526230586c4d484e616f7836732f4c505a356a72643669362f4b54596f50395041684b45575966734c4978702f6b725856560a77722b69734d764f4e39654b4d437335516552793061766949617041356a43444e48315a757730566d753249484f59723378574774336c3135583278626d4b780a32463855722b765978516c73436d632b7851422b6965344c7441674c706c4947516b495069595073564b56754b7678706455466b7a776d6f4c4c714e7463576b0a4b796138706942464764687359514f654b6e336774673d3d0a2d2d2d2d2d454e4420454e435259505445442050524956415445204b45592d2d2d2d2d0a".to_string());
        let expected_output = String::from_utf8(
            expected_pem
                .private_key(Some("test"))?
                .public_key_to_pem()?,
        )?;
        get_identity_test("pem", false, expected_output)
    }

    #[test]
    fn get_identity_private_key_pem() -> Result<(), EncItError> {
        let expected_pem = EncItPEM::Hex("2d2d2d2d2d424547494e20454e435259505445442050524956415445204b45592d2d2d2d2d0a4d4949464844424f42676b71686b694739773042425130775154417042676b71686b69473977304242517777484151493838324d6757597a59774d43416767410a4d41774743437147534962334451494a42514177464159494b6f5a496876634e41776345434e48324e35597a305a5a6742494945794b385552474554676d57570a7a465453695679474e6566496563315876354237374b59576c505a75765753474f66786451696377394378696653496d44637a53384e6a484b537355343044690a334e3141427155685652772b435a425562317141707958336d3731596446776f6c3874535951756658626f6c4f453176394b384b4d2f506e387644556e6867610a4e7365722f6466656e48643846724734643566626c4564645247496a67615777446a55566e41307632547531764868382b4c6370666a5858356b62664163524f0a2b7268492f47575a737130306e41336e6d445270354e537761454e613036594234543538565a686a50577a6c6634776f546a69733630727a616b4b716e4d51640a4f5535367a304834764b6c2b7a6d522f704c5473476731434241724864334a4857596e304959383952302b677665465259317559362f753234364962714a4a630a743557694c72444532792b6d4b2b58733659443966474f7842654a414f5268337a525a694457616d39392f536545646271754f5a735857563947344c68616a6d0a49627461717753694677547a2f6751534f464c574b553766513370675a7a594275772b63464b3045485777386f5677686f33765a3378515630583259512b6d360a677075575472463377464f795743564438534468786d6b304e2f51764547324e7a6257534a69594c624451554d7858783767636e304a50794138766c73465a410a4d797061373263714a3775695378776b4e4873527068743150796a667a51644a784f55307355534c2f5864524135346a2b38593962515a35704a4b566767454f0a705150346748307048326e65316a49725952754466333149566930726f4c554d4a4a6f686b6c48684a5a5a5035736664375448536e516f3174304e4f6f2b62300a4b6d594173594e6f4e39724d5738724666725556484c32483366635873344a6e366c596f63476a7268436f462b7166496a6a48637a68484f7451497675756c360a3964726661774c5434624a543234454c726d615655686f716531573032686c6c42506441767748696f6b446247533864766e6567615548726f6f4d6f373962610a434b7271704868684669654d646a445174777835656a4265324b56692b6165644f533469507131626e67386162337264724f4d4c3939373864476d7a4b366c340a4b525a596a702f4c3051707169436f584f794e44776a61377746384253477466553338625664303235576a704943547541617753714a4a666c53365238436d640a4e686d6b376d4d742b456e6436696b51563246436133536a6630587969742f6e33386a55344c7a4545684a6f34446a656d30486b717875647455416e436c66770a38392f4235525a7353646f2f764748642b69304337674f42624743617370334c34766b6b727378683863676452795754427837634d65477057573371704f314b0a424647476b4143306879676973764e6b6444383953796b36626f364173304365647a446245526a525858664e4d6d514e61386a4d4e334d556c3632356b7867340a667149524931366b5176453147464e7230305241456e537474543063316e313757482b64614453393647667031327330656e31394b303371467348446b6d55680a4b4277535a6a6973706a74706f67595973495538616b684d41683273723942356e5579754b3842684441337874795245684f2f4b3471376153624a775268756e0a794838796145414776395a564a54584f66544a6d702b32527a79734d5968772b3632516d3833697a4d6f2b35742f7677585a4375764f4b5042495543576c52780a5a7571767178384169364f2b7167574a36556c50616c446f41772b737272574743686935356e45314753695754377433447665504c5845567435692f794b37380a6f4e78796e6236765a764f30546e766b35684966437232344c3975544542554f756661344f4e76425a4c51345678393771446b4f706f393230716336764271720a4c4b734b5136416b4f4e6a334633526230586c4d484e616f7836732f4c505a356a72643669362f4b54596f50395041684b45575966734c4978702f6b725856560a77722b69734d764f4e39654b4d437335516552793061766949617041356a43444e48315a757730566d753249484f59723378574774336c3135583278626d4b780a32463855722b765978516c73436d632b7851422b6965344c7441674c706c4947516b495069595073564b56754b7678706455466b7a776d6f4c4c714e7463576b0a4b796138706942464764687359514f654b6e336774673d3d0a2d2d2d2d2d454e4420454e435259505445442050524956415445204b45592d2d2d2d2d0a".to_string());
        let expected_output = String::from_utf8(
            expected_pem
                .private_key(Some("test"))?
                .private_key_to_pem()?,
        )?;
        get_identity_test("pem", true, expected_output)
    }

    fn get_identity_test(
        format: &str,
        private_key: bool,
        expected_output: String,
    ) -> Result<(), EncItError> {
        let cmd = get_identity_cmd();
        let identity_name = "identity-1";
        let params = if private_key {
            vec![
                "identity",
                identity_name,
                "--format",
                format,
                "--private-key",
            ]
        } else {
            vec!["identity", identity_name, "--format", format]
        };
        let cmd_matches = cmd.get_matches_from(params);
        let mut cfg = MockEncItConfig::new();
        cfg.expect_identity()
            .with(eq(identity_name))
            .returning(move |_| {
                let output_identity = Box::leak(Box::new(EncItIdentity::new(
                    identity_name.to_string(),
                    EncItPrivateKey::new(EncItPEM::Hex("2d2d2d2d2d424547494e20454e435259505445442050524956415445204b45592d2d2d2d2d0a4d4949464844424f42676b71686b694739773042425130775154417042676b71686b69473977304242517777484151493838324d6757597a59774d43416767410a4d41774743437147534962334451494a42514177464159494b6f5a496876634e41776345434e48324e35597a305a5a6742494945794b385552474554676d57570a7a465453695679474e6566496563315876354237374b59576c505a75765753474f66786451696377394378696653496d44637a53384e6a484b537355343044690a334e3141427155685652772b435a425562317141707958336d3731596446776f6c3874535951756658626f6c4f453176394b384b4d2f506e387644556e6867610a4e7365722f6466656e48643846724734643566626c4564645247496a67615777446a55566e41307632547531764868382b4c6370666a5858356b62664163524f0a2b7268492f47575a737130306e41336e6d445270354e537761454e613036594234543538565a686a50577a6c6634776f546a69733630727a616b4b716e4d51640a4f5535367a304834764b6c2b7a6d522f704c5473476731434241724864334a4857596e304959383952302b677665465259317559362f753234364962714a4a630a743557694c72444532792b6d4b2b58733659443966474f7842654a414f5268337a525a694457616d39392f536545646271754f5a735857563947344c68616a6d0a49627461717753694677547a2f6751534f464c574b553766513370675a7a594275772b63464b3045485777386f5677686f33765a3378515630583259512b6d360a677075575472463377464f795743564438534468786d6b304e2f51764547324e7a6257534a69594c624451554d7858783767636e304a50794138766c73465a410a4d797061373263714a3775695378776b4e4873527068743150796a667a51644a784f55307355534c2f5864524135346a2b38593962515a35704a4b566767454f0a705150346748307048326e65316a49725952754466333149566930726f4c554d4a4a6f686b6c48684a5a5a5035736664375448536e516f3174304e4f6f2b62300a4b6d594173594e6f4e39724d5738724666725556484c32483366635873344a6e366c596f63476a7268436f462b7166496a6a48637a68484f7451497675756c360a3964726661774c5434624a543234454c726d615655686f716531573032686c6c42506441767748696f6b446247533864766e6567615548726f6f4d6f373962610a434b7271704868684669654d646a445174777835656a4265324b56692b6165644f533469507131626e67386162337264724f4d4c3939373864476d7a4b366c340a4b525a596a702f4c3051707169436f584f794e44776a61377746384253477466553338625664303235576a704943547541617753714a4a666c53365238436d640a4e686d6b376d4d742b456e6436696b51563246436133536a6630587969742f6e33386a55344c7a4545684a6f34446a656d30486b717875647455416e436c66770a38392f4235525a7353646f2f764748642b69304337674f42624743617370334c34766b6b727378683863676452795754427837634d65477057573371704f314b0a424647476b4143306879676973764e6b6444383953796b36626f364173304365647a446245526a525858664e4d6d514e61386a4d4e334d556c3632356b7867340a667149524931366b5176453147464e7230305241456e537474543063316e313757482b64614453393647667031327330656e31394b303371467348446b6d55680a4b4277535a6a6973706a74706f67595973495538616b684d41683273723942356e5579754b3842684441337874795245684f2f4b3471376153624a775268756e0a794838796145414776395a564a54584f66544a6d702b32527a79734d5968772b3632516d3833697a4d6f2b35742f7677585a4375764f4b5042495543576c52780a5a7571767178384169364f2b7167574a36556c50616c446f41772b737272574743686935356e45314753695754377433447665504c5845567435692f794b37380a6f4e78796e6236765a764f30546e766b35684966437232344c3975544542554f756661344f4e76425a4c51345678393771446b4f706f393230716336764271720a4c4b734b5136416b4f4e6a334633526230586c4d484e616f7836732f4c505a356a72643669362f4b54596f50395041684b45575966734c4978702f6b725856560a77722b69734d764f4e39654b4d437335516552793061766949617041356a43444e48315a757730566d753249484f59723378574774336c3135583278626d4b780a32463855722b765978516c73436d632b7851422b6965344c7441674c706c4947516b495069595073564b56754b7678706455466b7a776d6f4c4c714e7463576b0a4b796138706942464764687359514f654b6e336774673d3d0a2d2d2d2d2d454e4420454e435259505445442050524956415445204b45592d2d2d2d2d0a".to_string()), Some("test".to_string())),
                )));
                Some(output_identity)
            });

        let config: Rc<dyn EncItConfig> = Rc::new(cfg);
        let writer: Rc<RefCell<Vec<u8>>> = Rc::new(RefCell::new(Vec::new()));
        get_identity(&cmd_matches, config, writer.clone())?;
        let result = String::from_utf8(writer.borrow().to_vec())?;
        assert_eq!(result, expected_output);
        Ok(())
    }
}
